{"version":3,"file":"static/js/119.14cf7e9a.chunk.js","mappings":"oNAEO,MAAMA,EAAYC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kLAWtBC,EAAoBJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6BAI9BG,EAAYN,EAAAA,EAAOO,GAAEC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,4I,4BCf3B,MAAMM,EAAkBT,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uGAO5BO,EAAeV,EAAAA,GAAOW,EAACN,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,qI,aCJpC,MAUA,EAVkBS,KAEdC,EAAAA,EAAAA,KAACJ,EAAe,CAAAK,UACdD,EAAAA,EAAAA,KAACH,EAAY,CAAAI,SAAC,mGCiCpB,EAhCqBC,KACnB,MAAMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,GACxBC,GAAWC,EAAAA,EAAAA,MAMnB,OACEC,EAAAA,EAAAA,MAACtB,EAAS,CAAAe,SAAA,EACRD,EAAAA,EAAAA,KAACT,EAAiB,CAAAU,UAChBD,EAAAA,EAAAA,KAACS,EAAAA,EAAM,CAACC,eAPeC,IACzBL,GAASM,EAAAA,EAAAA,IAAmBD,GAAc,EAMIE,KAAMV,MAGnDA,EAAUW,OAAS,GAClBd,EAAAA,EAAAA,KAACP,EAAS,CAAAQ,SACPE,EAAUY,KAAIC,IACbhB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACD,YAAaA,KADfA,EAAYE,SAM1BlB,EAAAA,EAAAA,KAACD,EAAS,MAGF,C","sources":["pages/Favorites/favorites.styled.jsx","components/NotResult/notResult.styled.jsx","components/NotResult/notResult.jsx","pages/Favorites/favorites.jsx"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  min-height: 65vh;\r\n  grid-gap: 29px;\r\n  padding-bottom: 20px;\r\n  max-width: 1184px;\r\n  margin: 0 auto;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nexport const FilteredContainer = styled.div`\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const ListItems = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  grid-gap: 29px;\r\n  margin-top: 30px;\r\n  margin-bottom: 20px;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const NoResultWrapper = styled.div`\r\n  display: inline-block;\r\n  padding-top: 24px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const NoResultText = styled.p`\r\n  display:block;\r\n  line-height: 1.3;\r\n  font-weight: 400;\r\n  margin-bottom: 16px;\r\n  color: gray;\r\n  text-align: center;\r\n`;\r\n","import { NoResultText, NoResultWrapper } from \"./notResult.styled\";\r\nimport React from 'react';\r\n\r\n\r\n\r\nconst NotResult = () => {\r\n  return (\r\n    <NoResultWrapper>\r\n      <NoResultText>\r\n        Sorry, no results found. Please check back later or explore other items\r\n        on the catalog page.\r\n      </NoResultText>\r\n    </NoResultWrapper>\r\n  );\r\n};\r\nexport default NotResult;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateFilteredData } from '../../redux/filter/filterSlice';\r\nimport CardItem from 'components/CardItem/cardItem';\r\nimport { getSelectorFavorites } from '../../redux/favorites/selector';\r\nimport { Container, FilteredContainer, ListItems } from './favorites.styled';\r\nimport Filter from 'components/Filter/filter';\r\nimport NotResult from 'components/NotResult/notResult';\r\n\r\nconst FavoriteList = () => {\r\n  const favorites = useSelector(getSelectorFavorites);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilterChange = filteredData => {\r\n    dispatch(updateFilteredData(filteredData));\r\n  };\r\n \r\nreturn (\r\n  <Container>\r\n    <FilteredContainer>\r\n      <Filter onFilterChange={handleFilterChange} data={favorites} />\r\n    </FilteredContainer>\r\n\r\n    {favorites.length > 0 ? (\r\n      <ListItems>\r\n        {favorites.map(catalogData => (\r\n          <div key={catalogData.id}>\r\n            <CardItem catalogData={catalogData} />\r\n          </div>\r\n        ))}\r\n      </ListItems>\r\n    ) : (\r\n      <NotResult />\r\n    )}\r\n\r\n  </Container>\r\n);\r\n\r\n\r\n};\r\n\r\nexport default FavoriteList;\r\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","FilteredContainer","_templateObject2","ListItems","ul","_templateObject3","NoResultWrapper","NoResultText","p","NotResult","_jsx","children","FavoriteList","favorites","useSelector","getSelectorFavorites","dispatch","useDispatch","_jsxs","Filter","onFilterChange","filteredData","updateFilteredData","data","length","map","catalogData","CardItem","id"],"sourceRoot":""}